#Read the data:
a <- read.table("http://www.stat.ucla.edu/~nchristo/statc183c283_10stocks.txt", header=TRUE)

r1 <- (a$P1[-length(a$P1)]-a$P1[-1])/a$P1[-1]
r2 <- (a$P2[-length(a$P2)]-a$P2[-1])/a$P2[-1]
r3 <- (a$P3[-length(a$P3)]-a$P3[-1])/a$P3[-1]
r4 <- (a$P4[-length(a$P4)]-a$P4[-1])/a$P4[-1]
r5 <- (a$P5[-length(a$P5)]-a$P5[-1])/a$P5[-1]
r6 <- (a$P6[-length(a$P6)]-a$P6[-1])/a$P6[-1]
r7 <- (a$P7[-length(a$P7)]-a$P7[-1])/a$P7[-1]
r8 <- (a$P8[-length(a$P8)]-a$P8[-1])/a$P8[-1]
r9 <- (a$P9[-length(a$P9)]-a$P9[-1])/a$P9[-1]
r10 <- (a$P10[-length(a$P10)]-a$P10[-1])/a$P10[-1]

data1 <- as.data.frame(cbind(r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,a$SPRET[-216]))

#Initialize the vectors and matrices:
x <- rep(0, 50)
xx <- matrix(x, ncol=5, nrow=10)

alpha <- rep(0,10)
beta <- rep(0,10)
mse <- rep(0,10)
mse1 <- rep(0,10)
Rbar <- rep(0,10)
Ratio <- rep(0,10)
var <- rep(0,10)
beta_adj <- rep(0,10)

col1 <- rep(0,10)
col2 <- rep(0,10)
col3 <- rep(0,10)
col4 <- rep(0,10)
col5 <- rep(0,10)
q1 <- rep(0,10)

#Perform regression of each stock on the index and record alpha, beta, #mse:
for(i in 1:10){
alpha[i] <- lm(data=data1,formula=data1[,i] ~ data1[,11])$coefficients[1]
beta[i] <- lm(data=data1,formula=data1[,i] ~ data1[,11])$coefficients[2]
Rbar[i] <- alpha[i]+beta[i]*mean(data1[,11])
mse[i] <- summary(lm(data=data1, formula=data1[,i] ~ data1[,11]))$sigma^2
var[i] <- beta[i]^2*var(data1[,11]) + mse[i]
Ratio[i] <- (Rbar[i]-0.001)/beta[i]
               }

#Vasicek's method:
for(i in 1:10){
q <- lm(data=data1, formula=data1[,i] ~ data1[,11])
q1[i] <- vcov(q)[2,2]

beta_adj[i] <- vcov(q)[2,2]*mean(beta)/(var(beta)+vcov(q)[2,2]) + 
var(beta)*beta[i]/(var(beta)+vcov(q)[2,2])
               }

cbind(beta, beta_adj)


#=========
#Exercise 2:
#Short sales allowed:
#Unadjusted betas:
#Initial table:
xx <- (cbind(alpha, beta, Rbar, mse, Ratio))

#Order the table based on the excess return to beta ratio:
aaa <- xx[order(-Ratio),]

#Create the last 5 columns of the table:
col1 <- (aaa[,3]-.001)*aaa[,2]/aaa[,4]

col3 <- aaa[,2]^2/aaa[,4]

for(i in(1:10)) {
      
         col2[i] <- sum(col1[1:i])
         col4[i] <- sum(col3[1:i])
              }

#cbind(aaa, col1, col2, col3, col4)

#Compute the Ci:
for(i in (1:10)) {

          col5[i] <- var(data1[,11])*col2[i]/(1+var(data1[,11])*col4[i])
              
               }

#SHORT SALES ALLOWED:
#Compute the Zi:
z <- (aaa[,2]/aaa[,4])*(aaa[,5]-col5[10])

#Compute the xi:
x <- z/sum(z)

#The final table:
aaaa <- cbind(aaa, col1, col2, col3, col4, col5, z, x)


#Short sales not allowed
#Unadjusted betas
#Create a new data frame with only the row up to the #maximum Ci: 
aaaaaa <- aaaa[1:which(col5==max(col5)), 1:10]
z_no <- (aaaaaa[,2]/aaaaaa[,4])*(aaaaaa[,5]-max(col5))
x_no <- z_no/sum(z_no)

a_no <- cbind(aaaaaa, z_no, x_no)



























--------------------------------------------------------
#Short sales allowed:
#Adjusted betas:
#Initial table:
xx <- (cbind(alpha, beta_adj, Rbar, mse, Ratio))

#Order the table based on the excess return to beta ratio:
aaa <- xx[order(-Ratio),]

#Create the last 5 columns of the table:
col1 <- (aaa[,3]-.001)*aaa[,2]/aaa[,4]

col3 <- aaa[,2]^2/aaa[,4]

for(i in(1:10)) {
      
         col2[i] <- sum(col1[1:i])
         col4[i] <- sum(col3[1:i])
              }

#cbind(aaa, col1, col2, col3, col4)

#Compute the Ci:
for(i in (1:10)) {

          col5[i] <- var(data1[,11])*col2[i]/(1+var(data1[,11])*col4[i])
              
               }

#SHORT SALES ALLOWED:
#Compute the Zi:
z <- (aaa[,2]/aaa[,4])*(aaa[,5]-col5[10])

#Compute the xi:
x <- z/sum(z)

#The final table:
aaaa <- cbind(aaa, col1, col2, col3, col4, col5, z, x)

#Short sales not allowed
#Adjusted betas
#Create a new data frame with only the row up to the #maximum Ci: 
aaaaaa <- aaaa[1:which(col5==max(col5)), 1:10]
z_no <- (aaaaaa[,2]/aaaaaa[,4])*(aaaaaa[,5]-max(col5))
x_no <- z_no/sum(z_no)

a_no <- cbind(aaaaaa, z_no, x_no)



#==========
#Exercise 3:
#==========
rho <- (sum(cor(data1[1:10]))-10)/90

#Initialize the vectors and matrices:
x <- rep(0, 40)
xx <- matrix(x, ncol=4, nrow=10)

Rbar <- rep(0,10)
Rbar_f <- rep(0,10)
sigma <- rep(0,10)
Ratio <- rep(0,10)

col1 <- rep(0,10)
col2 <- rep(0,10)
col3 <- rep(0,10)


#For the var-covar matrix:
y <- rep(0,100)
mat <- matrix(y, ncol=10, nrow=10)

#Compute necessary quantities:
Rbar <- mean(data1[1:10])
Rbar_f <- Rbar-0.001
sigma <- sd(data1[1:10])
Ratio <- Rbar_f/sigma

var1 <- var(data1[,1:10])
sigma <- diag(var1)^.5



#Initial table:
xx <- (cbind(Rbar, Rbar_f, sigma, Ratio))

#Order the table based on the excess return to sigma ratio:
aaa <- xx[order(-Ratio),]


#Create the last 3 columns of the table:

for(i in(1:10)) {
      
         col1[i] <- rho/(1-rho+i*rho)

         col2[i] <- sum(aaa[,4][1:i])
              }

#cbind(aaa, col1, col2, col3, col4)

#Compute the Ci:
for(i in (1:10)) {

          col3[i] <- col1[i]*col2[i]
              
               }

#Create the entire table until now:
xxx <- cbind(aaa, col1, col2, col3)

#Compute the Zi:
z <- (1/((1-rho)*xxx[,3]))*(xxx[,4]-xxx[,7][nrow(xxx)])

#Compute the xi:
x <- z/sum(z)

#The final table:
aaaa <- cbind(xxx, z, x)



#Short sales not allowed:
#Find composition of optimum portfolio when short sales are not allowed:
aaaaa <- aaaa[1:which(aaaa[,7]==max(aaaa[,7])), ]
z_no <- (1/((1-rho)*aaaaa[,3]))*(aaaaa[,4]-aaaaa[,7][nrow(aaaaa)])
x_no <- z_no/sum(z_no)

a_no <- cbind(aaaaa, z_no, x_no)

